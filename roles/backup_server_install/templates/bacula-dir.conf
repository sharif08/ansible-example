Director {
  Name = {{ internal_bacula_backup_host_name }}-dir
  DIRport = 9101
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/run/bacula"
  Maximum Concurrent Jobs = 50
  Password = "{{ internal_bacula_backup_pass }}"
  Messages = Daemon
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = {{ internal_bacula_backup_host_name }}-fd
  FileSet = "etc-and-home-files"
  Schedule = "WeeklyCycle"
  Storage = File0
  Messages = Standard
  Pool = catalog-pool
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/etc/bacula/bootstrap/{{ internal_bacula_backup_host_name }}.bsr"
}

Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/etc/bacula/bootstrap/%n.bsr"
  Priority = 11
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full sun at 08:35
  Run = Incremental mon-sat at 02:00
}


Schedule {
  Name = "WeeklyCycle01"
  Run = Full sun at 09:35
  Run = Incremental mon-sat at 02:30
}

Schedule {
  Name = "WeeklyCycle02"
  Run = Full sun at 10:35
  Run = Incremental mon-sat at 03:00
}

Schedule {
  Name = "WeeklyCycle03"
  Run = Full sun at 11:35
  Run = Incremental mon-sat at 03:30
}

Schedule {
  Name = "WeeklyCycle04"
  Run = Full sun at 12:35
  Run = Incremental mon-sat at 04:00
}

Schedule {
  Name = "WeeklyCycle05"
  Run = Full sun at 13:35
  Run = Incremental mon-sat at 04:30
}

Schedule {
  Name = "WeeklyCycle06"
  Run = Full sun at 14:35
  Run = Incremental mon-sat at 05:00
}

Schedule {
  Name = "WeeklyCycle07"
  Run = Full sun at 15:35
  Run = Incremental mon-sat at 05:30
}

Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 06:00
}

FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bacula/bacula.sql"
  }
}

FileSet {
  Name = "backup-server"
  Include {
    File = /etc
    File = /home
    File = /mnt/data/NFS/filer
    File = /mnt/data/NFS/FTP
    File = /mnt/data/NFS/k8s-dev-clu
    File = /mnt/data/NFS/k8s-prod-clu
    File = /mnt/data/NFS/keybase
    File = /mnt/data/NFS/kubernetes
    File = /mnt/data/NFS/minio
    Options {
      signature = MD5
      compression=gzip
    }
  }
  Exclude {
  }
}

FileSet {
  Name = "etc-and-home-files"
  Include {
    File = /etc
    File = /home
    Options {
      signature = MD5
      compression=gzip
    }
  }
  Exclude {
  }
}

Autochanger {
  Name = File1
  Address = {{ internal_bacula_backup_host_name }}
  SDPort = 9103
  Password = "{{ internal_bacula_backup_pass }}"
  Device = FileChgr1
  Media Type = File1
  Maximum Concurrent Jobs = 50
  Autochanger = File1
}

Autochanger {
  Name = File0
  Address = vie01-bkp01
  SDPort = 9103
  Password = "backuppassword"
  Device = FileChgr0
  Media Type = File0
  Maximum Concurrent Jobs = 50
  Autochanger = File0
}

Catalog {
  Name = MyCatalog
  dbname = "bacula"; DB Address = "localhost"; dbuser = "bacula"; dbpassword = "DQwa81i9"
}

Messages {
  Name = Standard

  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = {{ internal_bacula_backup_email_notification_01 }} = all, !skipped
  operator = {{ internal_bacula_backup_email_notification_01 }} = mount
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
  Catalog = all, !debug, !skipped, !saved
}

Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = {{ internal_bacula_backup_email_notification_01 }} = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
  Catalog = all, !debug, !skipped, !saved
}

Pool {
  Name = catalog-pool
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label
}

Pool {
  Name = Scratch
  Pool Type = Backup
}

Console {
  Name = {{ internal_bacula_backup_host_name }}-mon
  Password = "{{ internal_bacula_backup_pass }}"
  CommandACL = status, .status
}

@|"find /etc/bacula/conf.d -name '*.conf' -type f -exec echo @{} \;"
